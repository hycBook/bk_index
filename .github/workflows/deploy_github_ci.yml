# This is a basic workflow to help you get started with Actions

name: book index github

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  # pull_request:
  #  branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build_env_hyc"
  build_env_hyc:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # install nodejs env
      - name: install nodejs
        uses: actions/setup-node@v1
        with: 
          node-version: '12.16.1'
      
      # configue gitbook
      - name: configue gitbook
        run: |
          npm install -g gitbook-cli
          echo 开始显示
          git clone https://github.com/narutohyc/node_modules_mathjax.git
          cp -r ./node_modules_mathjax/node_modules .
          gitbook install
          # npm install -g gitbook-summary

      - name: export pdf ebook
        run: |
          # 安装calibre，生成电子书
          echo 安装calibre...
          npm install svgexport -g
          sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin
          sudo ln -s /usr/bin/nodejs /usr/bin/node
          echo 安装calibre完成
          mkdir -p /usr/share/fonts/truetype
          cp -r ./node_modules_mathjax/fonts/* /usr/share/fonts/truetype
      
      - name: python pdf ebook
        run: |
          echo python 版本
          python --version

      # generate _book folder
      - name: generate_book_folder
        run: |
          # book sm
          gitbook build
          echo 开始生成pdf电子书...
          gitbook epub ./ bk_index.epub
          echo 生成pdf电子书完成
          cp bk_index.epub _book/
          echo pdf电子书复制完成
          # cp SUMMARY.md _book

      - name: Deploy #步骤4：把编译好的静态目录上传到gh-pages分支上
        uses: JamesIves/github-pages-deploy-action@3.1.5 #这里调用第三方依赖，用于上传代码到指定分支上
        with:
          ACCESS_TOKEN: ${{ secrets.TOKEN }}
          BRANCH: gh-pages #github pages 默认的分支
          FOLDER: _book #上传文件的目录，我这个目录在根目录下，如果是子目录可以这么写  docs/.vuepress/dist

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
  