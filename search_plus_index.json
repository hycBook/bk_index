{"./":{"url":"./","title":"Introduction","keywords":"","body":" &#x1F40D; python学习笔记 &#x1F42C; java学习笔记 &#x1F37C; 机器学习学习笔记 &#x1F40D; python学习笔记gitee &#x1F42C; java学习笔记gitee &#x1F37C; 机器学习学习笔记gitee &#x1F40D; python学习笔记 &#x1F42C; java学习笔记 &#x1F37C; 机器学习学习笔记 &#x1F40D; python学习笔记 &#x1F42C; java学习笔记 &#x1F37C; 机器学习学习笔记 Copyright © narutohyc.com 2021 all right reserved，powered by Gitbook该文件修订时间： 2022-03-30 15:24:53 new Valine({el: \"#vcomments\",appId: 'WuiP4MKU6JCmvPTVCh4GEcyb-gzGzoHsz',appKey: 'L0zH7w5x6Jdis3VEQRK1FDPC',placeholder: '欢迎留下评论交流~',avatar: 'wavatar',meta: undefined,pageSize: 15,lang: 'zh-CN',recordIP: false}) "},"chapters/1.alicloud_deployment.html":{"url":"chapters/1.alicloud_deployment.html","title":"alicloud_deployment","keywords":"","body":"阿里云部署环境安装安装git、jdk和nodejsgit访问慢配置常用命令批量杀死进程 阿里云部署 阿里云部署笔记(centos版本)，购买阿里云主机，开启安全组 云主机实例 配置安全组 环境安装 安装git、jdk和nodejs 安装jdk # 安装jdk rpm -ivh jdk-8u241-linux-x64.rpm 配置jdk环境变量vi /etc/profile export JAVA_HOME=/usr/java/jdk1.8.0_241-amd64 export JRE_HOME=/usr/java/jdk1.8.0_241-amd64/jre export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib ps: 若原先存在openjdk，需要先卸载 # 查看jdk列表 rpm -qa|grep java # 卸载 rpm -e --nodeps java-1.8.0-openjdk-1.8.0.181-7.b13.el7.x86_64 安装和配置nodejs # 安装和配置nodejs cp node-v12.16.1-linux-x64.tar.xz /usr/local/ cd /usr/local/ tar -xvf node-v12.16.1-linux-x64.tar.xz mv node-v12.16.1-linux-x64/ nodejs cd nodejs mkdir node_global mkdir node_cache npm config set prefix \"/usr/local/nodejs/node_global\" npm config set cache \"/usr/local/nodejs/node_cache\" # 配置nodejs vim /etc/profile # 在末尾添加 export PATH=$PATH:/usr/local/nodejs/bin # config nodejs # 执行生效命令 source /etc/profile 安装和配置git # 安装和配置git yum install git git config --global user.name \"yourname\" git config --global user.mail \"xxxxxxxxxx@mail.com\" # 配置远程仓库 将pub_key黏贴到git ssh-keygen -t rsa -C \"xxxxxxxxxx@mail.com\" 安装和配置git # 安装和配置git yum install git git config --global user.name \"narutohyc\" git config --global user.mail \"1832044043@qq.com\" # 配置远程仓库 将pub_key黏贴到git ssh-keygen -t rsa -C \"1832044043@qq.com\" 安装gitbook # 安装gitbook npm install gitbook-cli -g # 添加gitbook软链接 ln -s /usr/local/nodejs/node_global/bin/gitbook /usr/bin/gitbook # gitbook指令测试 gitbook -V git访问慢配置 Github下载速度太慢怎么办？完美解决 服务器查询 github hosts下载, 实时更新 通过修改 hosts文件，重定向网站的访问到代理服务器上 系统 hosts文件路径 Window %systemroot%\\system32\\drivers\\etc\\hosts Mac / Linux /etc/hosts # github 219.76.4.4 github-cloud.s3.amazonaws.com 140.82.113.4 github.com 151.101.185.194 github.global.ssl.fastly.net 刷新DNS缓存，Linux/Mac/Windows-刷新DNS的方法 yum install -y nscd systemctl restart nscd /etc/rc.d/init.d/nscd restart 常用命令 netstat -atunlp查看端口占用 杀死指定进程 gitbook指定端口并后台执行 # 指定端口为4001，并放在后台执行 setsid gitbook serve --lrport=35729 --port=4001 若启动gitbook报错 Starting server ... Serving book on http://localhost:4000 Error: ENOSPC: System limit for number of file watchers reached, watch '/home/hyc/github/bk_python/node_modules/entities/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Symbols' 则执行以下命令即可 echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p sudo sysctl --system 批量杀死进程 查看进程号 [root@iZ2zeh6nc313zs4azjijjnZ ~]# ps -ef | grep gitbook | grep -v grep|awk '{print $2}' 24064 29387 30425 方式一：batch_shell #!/bin/sh dsp_admin_id=`ps -ef | grep gitbook | grep -v grep|awk '{print $2}'` echo $dsp_admin_id for id in $dsp_admin_id do kill -9 $id echo \"killed $id\" done 方式二：单行执行 #!/bin/sh ps -ef | grep gitbook | grep -v grep|grep 4000| awk '{print $2}' | xargs kill -9 Copyright © narutohyc.com 2021 all right reserved，powered by Gitbook该文件修订时间： 2022-03-30 15:24:53 new Valine({el: \"#vcomments\",appId: 'WuiP4MKU6JCmvPTVCh4GEcyb-gzGzoHsz',appKey: 'L0zH7w5x6Jdis3VEQRK1FDPC',placeholder: '欢迎留下评论交流~',avatar: 'wavatar',meta: undefined,pageSize: 15,lang: 'zh-CN',recordIP: false}) "},"chapters/2.reinstall_the_system.html":{"url":"chapters/2.reinstall_the_system.html","title":"reinstall_the_system","keywords":"","body":"重装系统u盘启动盘制作方式一方式二磁盘格式化主板启动热键软件安装必装软件进阶软件IT软件Chrome扩展程序翻墙类脚本管理工具扩展脚本下载与推荐下载类效率类程序员类浏览器美化类局域网ftp共享 [TOC] 重装系统 安装系统不区分windows和linux，方式都是一样的 u盘启动盘制作 方式一 百度搜索微软官网工具 下载后，使用管理员身份运行 按步骤操作，其中下载镜像会比较耗时(好像只能下载win10) 制作启动盘完成后，就可以开始安装系统了 方式二 百度搜索itellyou，下载系统镜像 下载u盘启动盘制作工具UltraISO，安装后执行 制作启动盘完成后，就可以开始安装系统了 磁盘格式化 以 UEFI 启动的 Windows 磁盘必须是 GPT 格式，这里介绍如何在安装 Windows 期间将磁盘从 MBR 转换成 GPT。 在安装界面按Shift+F10或Fn+Shift+F10进入cmd界面 输入diskpart，进入管理界面 输入list disk查看所有的磁盘情况 磁盘 ### 状态 大小 可用 Dyn Gpt -------- ------------- ------- ------- --- --- 磁盘 0 联机 119 GB 118 GB * 磁盘 1 联机 465 GB 1024 KB 磁盘 2 联机 28 GB 0 B * 选择磁盘select disk 1 注意这里选择的是磁盘，而不是分区！不是通常所说的 C 盘/D 盘，而是一块 SSD，或一块机械硬盘。 执行clean或clean all清除所有数据 操作会清除选中磁盘中的所有数据，是所有数据，毫无保留！ 清除结束，然后敲入 convert gpt 命令完成转换 操作结束之后输入exit切换到 Windows 安装程序继续安装即可 激活工具(点击下载) 主板启动热键 表中没有的机型尝试：ESC、下F8、9、F10、11、F2 台式机品牌 启动按键 笔记本品牌 启动按键 主板品牌 启动按键 联想 F12 联想 F12 华硕 F8 惠普 F12 戴尔 F12 微星 F11 华硕 F8 华硕 ESC 戴尔 ESC 惠普 F9 神舟 F12 联想 F12 有些联想电脑有NOVO键是一键恢复按键。在电脑的侧面有个很小的按钮，旁边有标号——“一个逆时针箭头”，作用是：关机状态下，按此按键可启动联想一键恢复系统或,BIOS，设置程序，或者进入启动菜单 软件安装 必装软件 微软Office 办公软件是指可以进行文字处理、表格制作、幻灯片制作、图形图像处理、简单数据库的处理等方面工作的软件。 办公软件朝着操作简单化，功能细化等方向发展。链接下载(点我下载2016版) 删除软件IOBit IObit Uninstaller最新版是款功能高效的卸载工具。IObit Uninstaller官方版可轻松卸载并消除您电脑中的所有程序及文件，并在卸载后极速搜索注册表，找出残余信息并删除。并且IObit Uninstaller中还有一键移除工具列，批次移除和强制移除等功能。点我下载 chrome浏览器 百度搜索chrome浏览器，下载最新版本安装即可 可牛看图 一个功能强大且体积小巧的电脑看图工具，拥有丰富多样的图片浏览方式以及炫酷动感3D图片墙，支持批量图片上传、支持图片批量下载(官网下载，微云下载) 极速PDF阅读器 极速PDF阅读器(点我下载)是一款闪电般好用的PDF阅读器,体积小、启动速度快,十分轻巧且占用内存极少;提供单页、书本模式个性阅读,又有全屏、幻灯片等功能 布谷鸟配音(收费) 布谷鸟配音(点我下载)提供一站式智能配音的专业工具，输入文字转语音，一键将文字合成语音，真人情感配音 重启还原(免费版、专业版) 重启还原点我下载是一款不影响电脑性能，不占CPU使用率的还原工具，真正做到零内存占用，全程使用无感知，进入虚拟系统速度和普通系统速度相差无几 进阶软件 everything Everything(点我下载)是voidtools开发的一款文件搜索工具，它体积小巧，界面简洁易用，快速建立索引，快速搜索，同时占用极低的系统资源，实时跟踪文件变化，并且还可以通过http或ftp形式分享搜索 Treesize TreeSize Pro是一款优秀的磁盘空间管理工具。凭借其多样化的功能深受用户喜爱。通过该软件能够有效管理和清理磁盘空间，可视化磁盘空间的使用情况，详细分析目录级别，显示目录大小，包括所有子目录，直观呈现为饼图或条形状，所有信息一目了然(官网-需要自己找注册码、百度云下载-提取码: wqd1) visio Microsoft Visio是Windows 操作系统下运行的流程图软件，它现在是Microsoft Office软件的一个部分。 Visio可以制作的图表范围十分广泛，有些人利用Visio的强大绘图功能绘制地图、企业标志等，同时Visio支持将文件保存为svg、dwg等矢量图形通用格式，因此受到广泛欢迎。链接下载(点我下载2016版) Gow Gow(点我下载)是一个轻量级的Cygwin替代软件，它能做的事情是给Liunx软件提供一个Windows系统上的运行环境 安装后可以直接在windows上执行linux的大部分命令 Vmware VMware Workstation Pro 点我下载是行业标准桌面 Hypervisor，使用它可在 Windows 或 Linux 桌面上运行 Windows、Linux 和 BSD 虚拟机。激活码全家桶，历史版本下载将上面的Name项内容，拼接到下面链接后面 https://download3.vmware.com/software/wkst/file/，复制到浏览器下载，例如: https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.2.1-18811642.exe typora Typora(点我下载)是一款跨平台的Markdown编辑器软件,拥有Windows、macOS客户端 neatreader Neat Reader(点我下载)率先在业界实现了主流平台的全面支持，让你无需再在各个软件间来回切换，真正实现了无拘无束，随时随地阅读体验，致力于打造一个满足现代需求的 EPUB/TXT 阅读器 PandaOCR PandaOCR(普通版，专业版)是一款专注于 Windows 桌面端 OCR 文字识别的免费软件，支持多功能 OCR 识别、即时翻译和朗读等。而且识别和翻译等引擎都是可以自由调换的，界面简洁，使用起来也很方便 PandaOCR.Pro同样是免费使用，但它有一个激活专业版本状态，在未激活状态下您可以使用除高级功能外的全部功能，同时识别或翻译等功能可使用演示接口和百度API版接口，普通使用基本足够 IT软件 git git官网下载 git config --global user.name \"narutohyc\" git config --global user.mail \"1832044043@qq.com\" # 配置远程仓库 将pub_key黏贴到git ssh-keygen -t rsa -C \"1832044043@qq.com\" 如果需要指定的文件名，可以在ssh-keygen -t rsa -C命令后输入自己的名字， 但是 ssh 命令默认只会读取id_rsa这个私钥文件，所以如果是其它的名字需要添加配置文件 touch ~/.ssh/config vi ~/.ssh/config # 输入一下内容 Host www.github.com IdentityFile /root/.ssh/hyc_github TortoiseGit(海龟 Git)是TortoiseSVN的 Git 版本，用于迁移 TortoiseSVN 到TortoiseGit，TortoiseGit 是一个 Git 版本控制客户端，作为 Microsoft Windows 的外壳扩展实现，配置教程 jdk 官网下载，主要配置参考 export JAVA_HOME=/usr/java/jdk1.8.0_241-amd64 export JRE_HOME=/usr/java/jdk1.8.0_241-amd64/jre export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib pycharm 官网下载，IDE全家桶激活码，验证码输入lookdiv.com navicat 提供简便的管理方法，设计和操作MySQL、MariaDB、SQL Server、Oracle、PostgreSQL和SQLite的数据(点我下载-提取码: 6sp9) Power Designer 是Sybase公司的CASE工具集，使用它可以方便地对管理信息系统进行分析设计，它几乎包括了数据库模型设计的全过程。利用PowerDesigner可以制作数据流程图、概念数据模型(ConceptualDataModel)、物理数据模型(PhysicalDataModel)，还可以为数据仓库制作结构模型，也能对团队设计模型进行控制。(官网-需要自己找注册码、百度云下载-提取码: n3xz) finalshell 免费的国产的集 SSH 工具、服务器管理、远程桌面加速的良心软件，同时支持 Windows，macOS，Linux，它不单单是一个 SSH 工具，完整的说法应该叫一体化的的服务器，网络管理软件，在很大程度上可以免费替代 XShell，是国产中不多见的良心产品，具有免费海外服务器远程桌面加速，ssh 加速，双边 tcp 加速，内网穿透等特色功能(点我下载) Officebox 完全免费的PDF工具/万能格式转换/识别工具/图片处理，多达60+个小工具，提供绿色版(点我下载) Wolfram Mathematica 一款数学计算软件，具有编程语言、文本系统、计算引擎、图形系统等多种特色功能，并且还完美支持支持高性能计算，让用户科学计算的过程中，充分的发挥出自身的优势等。可以用于画函数图像(点我下载-提取码: 52qa) Chrome扩展程序 没有插件的浏览器无异于没有灵魂！以下扩展程序的离线包微云下载 插件下载地址 crx4chrome: 下载指定扩展id的crx文件 extfans huajiakeji crxdown 应用商店 翻墙类 Astar VPN Astar VPN- 适合所有人的免费且快速的 VPN Ghelper 官网需要翻墙 脚本管理工具 扩展 油猴Tampermonkey 暴力猴Violentmonkey 脚本下载与推荐 脚本下载地址 openuserjs greasyfork 脚本推荐 百度网盘直接下载助手 网盘直链下载助手 解锁B站大会员番剧、B站视频解析下载；全网VIP视频免费破解去广告；全网音乐直接下载；油管、Facebook等国外视频解析下载；网盘搜索引擎破解无限下载等 破解VIP会员视频集合 下载类 Chrono下载管理器: 做Chrome浏览器中最好的下载管理器 nternet Download Manager: 您可以使用Internet下载管理器下载 Stream Recorder: 可以下载99%在线视频，包括直播流、m3u8流 Fatkun图片批量下载: 可以下载当前标签或者是所有标签的图片，提供按分辨率、链接等筛选图片 效率类 书签管理: 在任何页面都可以通过书签关键字快速搜索打开书签,管理您的书签 书签地球助手: 一款很优秀好用的网页浏览器上的书签管理助手，帮助用户一键整理网页标签，自定义标签设置方法，同时还可以查询搜索历史记录 广告拦截 AdGuard 广告拦截器是一款无与伦比的广告拦截扩展，用以对抗各式广告与弹窗。可以拦截 Facebook、YouTube 和其它所有网站的广告 广告终结者能清除网页上的所有广告：浮动广告，购物广告，恶意弹窗，跟踪代码。让你浏览网页更快更清爽 扩展管理器(Extension Manager): 一键管理所有扩展，快速开启/禁用、批量闪电管理，智能排序，右键卸载、锁定、选项配置，角标提醒，大小布局随心配。快捷、简单、安全 Simple Allow Copy: 简易复制 Reader View: 剥离按钮、背景图像等杂物，改变页面的文字大小、对比度和布局，以提高可读性 Diigo Web Collector - Capture and Annotate: 用来在网页上做笔记，高亮显示选中的文本，就像在本子上勾画重点一样(需要登录使用，免费版支持100个网页) 在线合并PDF: 快速免费合并PDF文件！ Diigo Web Collector: 像在本子上一样为网页做笔记 Docs Online Viewer: 直接在谷歌浏览器中在线查看任何文件 Instapaper: 是一款运行在chromr内核的能够即时保存网页的chrome网页离线阅读插件 Mate Translate: 是一款词典翻译类插件，可轻松翻译 103 种语言的单词、短语或文件。 功能包含 [全页翻译]: 只要单击鼠标，Mate 就会为您翻译整个网页！在任何页面上，只要使用上下文菜单中的“翻译此页面”功能，就可立即翻译为您想要的语言 Video Downloader professional: 是一款网页视频下载工具，下载前请先播放视频 FireShot: 不仅支持区域截图，还支持完整的长网页截图 Grammarly for Chrome: 国外最火的文字纠错工具，英语写作助手，帮助你在输出过程中找出英语单词拼写、语法、语调等问题，它为你提供具体的建议，帮助你提高英语写作水平 程序员类 Octotree - GitHub code tree Postman Interceptor Sourcegraph GitZip for github JSON Viewer Pro 浏览器美化类 MONKNOW 新标签页 - 个性化面板 Stylish-为任意网站自定义主题: 利用用户样式管理器Stylish来重新编辑网站的样式，可利用Stylish为许多网站安装主题和皮肤，也可创建自己的主题和皮肤 局域网ftp共享 FTP(File Transfer Protocol)是TCP/IP网络上两台计算机传送文件的协议，使得主机间可以共享文件 目前有很多软件都能实现这一功能，然而windows 8系统自带的IIS就可以帮助你搭建FTP服务器 打开控制面板 -> 程序 -> 启用或关闭windows功能 找到Internet信息服务，并选中FTP服务、FTP扩展性和IIS管理控制台前的复选框，点击确定 打开IIS管理器，在左栏的网站上点击右键，打开添加FTP站点 win+r后输入inetmgr，即可打开IIS管理器 开始配置，选择无SSL 在电脑浏览器地址栏中输入ftp://本机ip测试一下 在启动你的FTP服务器时建议关闭防火墙 常见问题 本机可以访问，其他机子无法访问，可能是防火墙问题或ftp服务权限问题 方式一: 关闭防火墙 方式二(推荐): 允许FTP服务通过防火墙 关闭被动FTP 将文件复制到ftp服务器出错，请检查是否有权限将文件放到该服务器上 win+r后输入inetmgr，打开IIS管理器，进入服务器管理器，单击右侧的[高级设置]选项，进入FTP高级设置对话框，在高级设置对话框中找到允许 UTF-8选项，单击下拉列，然后选择False选项，重启服务即可 Copyright © narutohyc.com 2021 all right reserved，powered by Gitbook该文件修订时间： 2022-03-30 15:24:53 new Valine({el: \"#vcomments\",appId: 'WuiP4MKU6JCmvPTVCh4GEcyb-gzGzoHsz',appKey: 'L0zH7w5x6Jdis3VEQRK1FDPC',placeholder: '欢迎留下评论交流~',avatar: 'wavatar',meta: undefined,pageSize: 15,lang: 'zh-CN',recordIP: false}) "},"chapters/3.Linux常用命令.html":{"url":"chapters/3.Linux常用命令.html","title":"Linux常用命令","keywords":"","body":"linux常用指令文件类磁盘类端口类进程类批量杀死进程日期时间系统级 [TOC] linux常用指令 linux指令入门 文件类 远程拷贝文件(-P 是指定端口，-r 是循环复制) scp -P port -r root@192.168.2.1:/home/hyc/test /home/hyc/ 文件权限 删除文件 删除文件夹 移动或更名 查找搜索 寻找特定档案：find、locate、whereis 寻找【执行挡】：which 磁盘类 查看某个文件或目录占用磁盘空间的大小(需要进入到当前目录) du -ah --max-depth=1 查看全局文件系统磁盘占用 df -h 端口类 netstat -atunlp查看端口占用 进程类 杀死指定进程 批量杀死进程 查看进程号 [root@iZ2zeh6nc313zs4azjijjnZ ~]# ps -ef | grep gitbook | grep -v grep|awk '{print $2}' 24064 29387 30425 方式一：batch_shell #!/bin/sh dsp_admin_id=`ps -ef | grep gitbook | grep -v grep|awk '{print $2}'` echo $dsp_admin_id for id in $dsp_admin_id do kill -9 $id echo \"killed $id\" done 方式二：单行执行 #!/bin/sh ps -ef | grep gitbook | grep -v grep|grep 4000| awk '{print $2}' | xargs kill -9 日期时间 显示日期 [root@iZ2zeh6nc313zs4azjijjnZ ~]# date 2022年 03月 12日 星期六 10:57:52 CST 显示日历 [root@iZ2zeh6nc313zs4azjijjnZ ~]# cal 三月 2022 日 一 二 三 四 五 六 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 系统级 版本信息 [root@iZ2zeh6nc313zs4azjijjnZ ~]# uname -r 3.10.0-1062.12.1.el7.x86_64 [root@iZ2zeh6nc313zs4azjijjnZ ~]# lsb_release -a LSB Version: :core-4.1-amd64:core-4.1-noarch Distributor ID: CentOS Description: CentOS Linux release 7.7.1908 (Core) Release: 7.7.1908 Codename: Core Copyright © narutohyc.com 2021 all right reserved，powered by Gitbook该文件修订时间： 2022-03-30 15:24:53 new Valine({el: \"#vcomments\",appId: 'WuiP4MKU6JCmvPTVCh4GEcyb-gzGzoHsz',appKey: 'L0zH7w5x6Jdis3VEQRK1FDPC',placeholder: '欢迎留下评论交流~',avatar: 'wavatar',meta: undefined,pageSize: 15,lang: 'zh-CN',recordIP: false}) "},"chapters/4.github协作.html":{"url":"chapters/4.github协作.html","title":"github协作","keywords":"","body":"github协作Fork 方式Organizations方式准备项目开始协作合作者githun actionsgithub同步gitee部署github pages发布releasebuild gitee pagesgithub基本命令markdwon语法 github协作 GitHub 多人协作开发三种方式 Fork 方式 暂无 Organizations方式 准备项目 新建组织(创建免费的即可，有每月免费2000分钟) 创建team(不建也是可以，建了容易管理) 添加team成员，在组织下选择team，给team拉队友，队友收到邮件后，同意了就可以加入 仓库转入(原来已有的仓库，进入仓库选择settings，下滑选Transfer)或在新建项目 为组织下的仓库添加合作者，配置权限 设置主分支保护，不让其他人直接push到主分支，打开仓库下的settings，选择branchs 添加Branch protection rules 开始协作 协作者在组织下找到对应的仓库，克隆仓库到本地 git clone git@github.com:hycBook/bk_python.git 开始编写，完成后提交至新分支，一般命名为dev_xxx 新分支创建一次就可以，commit之后，再push到自己的dev_xxx分支 注意：在修改文件之前一般是先从主分支拉取最新内容，修改完成后尽早提交，较少冲突 commit和push操作都是在自己的dev_xxx分支，pull操作是从主分支来 到github界面，选择Pull requests，在选择New pull request，选择分支 提交合并请求后，等待合并即可 合作者 暂无 githun actions Github Actions 是 Github 推出的自动化构建工具，一般来说，CI / CD （持续集成 / 持续部署）都需要自己的计算资源，但 Github Actions 提供免费的计算资源，这是它的优势之一，用户只用操心 workflow 文件，不用关心环境相关的琐碎，便可部署 CI / CD，加速了流程。 在 GitHub Actions 中，一次执行过程被称为一个 workflow，一个 workflow 中可以有一个或者多个 job，job 又由 step 组成，step 中可以执行 action，就是一条条命令 github同步gitee Hub Mirror Action 一个用于在hub间（例如Github，Gitee）账户代码仓库同步的action 准备步骤 本地生成公钥和秘钥 ssh-keygen -t -C \"1832044043@qq.com\" 公钥放在gitee github项目下新建：name=GITEE_PRIVATE_KEY，value=秘钥 gitee生成token github项目下新建：name=GITEE_TOKEN，value=gitee生成的token 基本用法 steps: - name: Sync Github Repos To Gitee # 名字随便起 uses: Yikun/hub-mirror-action@master # 使用Yikun/hub-mirror-action with: src: github/hycBook # 源端账户名(github),如果是组织的话要用组织名,此时account_type=org dst: gitee/hycBook # 目的端账户名(gitee),如果是组织的话要用组织名,此时account_type=org dst_key: ${{ secrets.GITEE_PRIVATE_KEY }} # SSH密钥对中的私钥 dst_token: ${{ secrets.GITEE_TOKEN }} # Gitee账户的私人令牌 account_type: org # 账户类型, # clone_style: \"ssh\" # 使用https方式进行clone，也可以使用ssh debug: true # 启用后会显示所有执行命令 force_update: true # 启用后，强制同步，即强制覆盖目的端仓库 static_list: \"bk_index\" # 静态同步列表，在此填写需要同步的仓库名称，可填写多个 timeout: '660s' # git超时设置，超时后会自动重试git操作 必选参数 src 需要被同步的源端账户名，如github/kunpengcompute，表示Github的kunpengcompute账户。 dst 需要同步到的目的端账户名，如gitee/kunpengcompute，表示Gitee的kunpengcompute账户。 dst_key 用于在目的端上传代码的私钥(默认可以从~/.ssh/id_rsa获取），可参考生成/添加SSH公钥或generating SSH keys生成，并确认对应公钥已经被正确配置在目的端。对应公钥，Github可以在这里配置，Gitee可以这里配置。 dst_token 创建仓库的API tokens， 用于自动创建不存在的仓库，Github可以在这里找到，Gitee可以在这里找到。 可选参数 account_type 默认为user，源和目的的账户类型，可以设置为org（组织）或者user（用户），该参数支持同类型账户（即组织到组织，或用户到用户）的同步。如果源目的仓库是不同类型，请单独使用src_account_type和dst_account_type配置。 src_account_type 默认为account_type，源账户类型，可以设置为org（组织）或者user（用户）。 dst_account_type 默认为account_type，目的账户类型，可以设置为org（组织）或者user（用户）。 clone_style 默认为https，可以设置为ssh或者https。当设置为ssh时，你需要将dst_key所对应的公钥同时配置到源端和目的端。 cache_path 默认为'', 将代码缓存在指定目录，用于与actions/cache配合以加速镜像过程。 black_list 默认为'', 配置后，黑名单中的repos将不会被同步，如“repo1,repo2,repo3”。 white_list 默认为'', 配置后，仅同步白名单中的repos，如“repo1,repo2,repo3”。 static_list 默认为'', 配置后，仅同步静态列表，不会再动态获取需同步列表（黑白名单机制依旧生效），如“repo1,repo2,repo3”。 force_update 默认为false, 配置后，启用git push -f强制同步，注意：开启后，会强制覆盖目的端仓库。 debug 默认为false, 配置后，启用debug开关，会显示所有执行命令。 timeout 默认为'30m', 用于设置每个git命令的超时时间，'600'=>600s, '30m'=>30 mins, '1h'=>1 hours mappings 源仓库映射规则，比如'A=>B, C=>CC', A会被映射为B，C会映射为CC，映射不具有传递性。主要用于源和目的仓库名不同的镜像。 部署github pages GitHub Pages Deploy Action 自动发布到github pages分支(可以自己设置分支) 配置token github项目下新建：name=TOKEN，value=github生成的token 基本用法 - name: Deploy #步骤4：把编译好的静态目录上传到gh-pages分支上 uses: JamesIves/github-pages-deploy-action@3.1.5 #这里调用第三方依赖，用于上传代码到指定分支上 with: ACCESS_TOKEN: ${{ secrets.TOKEN }} BRANCH: gh-pages #github pages 默认的分支 FOLDER: _book #上传文件的目录，我这个目录在根目录下，如果是子目录可以这么写 docs/.vuepress/dist 发布release action-automatic-releases@latest 自动创建release，并发布 基本用法 - name: Create GitHub release uses: marvinpinto/action-automatic-releases@latest with: repo_token: ${{ secrets.TOKEN }} automatic_release_tag: 'ebook_index' # 发布标签 title: ${{ env.ReleaseVersion }} prerelease: false files: | _ebook/* # 发布的目录 build gitee pages Gitee 如何自动部署 Pages？还是用 GitHub Actions! 使用 GitHub Actions 解决了 GitHub 代码自动同步 Gitee 的问题，但我们的博客仓库代码同步到 Gitee 后，并不能像 GitHub 一样自动部署 Pages，如果不使用付费的 Gitee Pages Pro 服务，那我们该怎么实现 Gitee 自动部署 Pages 呢 基本用法 新建一个name=GITEE_PASSWORD, value=gitee登陆密码的secrets - name: Build Gitee Pages uses: yanglbme/gitee-pages-action@main with: # 注意替换为你的 Gitee 用户名 gitee-username: narutohyc # 注意在 Settings->Secrets 配置 GITEE_PASSWORD gitee-password: ${{ secrets.GITEE_PASSWORD }} # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错 gitee-repo: hycBook/bk_index # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在） branch: gh-pages github 基本命令 强制覆盖本地文件 git fetch --all git reset --hard origin/master git pull markdwon语法 md表情链接~ Copyright © narutohyc.com 2021 all right reserved，powered by Gitbook该文件修订时间： 2022-03-30 15:24:53 new Valine({el: \"#vcomments\",appId: 'WuiP4MKU6JCmvPTVCh4GEcyb-gzGzoHsz',appKey: 'L0zH7w5x6Jdis3VEQRK1FDPC',placeholder: '欢迎留下评论交流~',avatar: 'wavatar',meta: undefined,pageSize: 15,lang: 'zh-CN',recordIP: false}) "}}